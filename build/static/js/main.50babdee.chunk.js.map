{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","console","log","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50babdee.chunk.js","sourcesContent":["const API_KEY = \"49d4713b5dc04c4c74a6c1f26612de78\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n  }\r\n  export default requests;","import axios  from 'axios';\r\n\r\nconst instance = axios.create({\r\n\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n\r\n});\r\n\r\nexport default instance;","import React ,{useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\"\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n\r\n    const[movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(()=> {\r\n\r\n        async function fetchData() {\r\n\r\n            const request = await axios.get(fetchUrl);\r\n            console.log(title);\r\n            console.log(request.data.results);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    \r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n          autoplay: 1,\r\n        },\r\n      };\r\n    \r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n          setTrailerUrl(\"\");\r\n        } else {\r\n          movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n              const urlParams = new URLSearchParams(new URL(url).search);\r\n              setTrailerUrl(urlParams.get(\"v\"));\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n      };\r\n    return (\r\n        <div className = \"row\"  >\r\n        <h1>{title}</h1>\r\n        <div className = \"row_posters\">\r\n\r\n        {movies.map(movie =>(\r\n        <img\r\n         key = {movie.id}\r\n         onClick={()=>handleClick(movie)}\r\n         className = {`row_poster ${isLargeRow && \"row_posterlarge\"}`} \r\n         src = {`${base_url}${isLargeRow? movie.poster_path : movie.backdrop_path}`}\r\n          alt = {movie.name}/>\r\n        ))}\r\n        </div>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default Row;","import React, {useState, useEffect} from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport \"./Banner.css\" \r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect (()=> {\r\n   async function fetchData() {\r\n     const request = await axios.get(requests.fetchNetflixOriginals);\r\n     setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length -1)]);\r\n     return request;\r\n   }\r\n   fetchData();\r\n  },[] );\r\n\r\n  function truncate (str,n) {\r\n\r\n         return str?.length > n ? str.substr(0,n-1)+ \"...\" :str;\r\n  }\r\n    return (\r\n        <header className = \"banner\"\r\n        style = {{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center center\",\r\n        }}\r\n        >\r\n            <div className = \"banner_contents\">\r\n             <h1 className = \"banner_title\">\r\n                 {movie?.title || movie?.name || movie.original_name}\r\n             </h1>\r\n\r\n             <div className = \"banner_buttons\">\r\n                 <button className = \"banner_button\"> Play</button>\r\n                 <button className =  \"banner_button\"> My List</button>\r\n             </div>\r\n             <h1 className = \"banner_description\">\r\n                 {truncate(movie?.overview,150)}\r\n             </h1>\r\n            </div>\r\n            <div className = \"banner_fadeBottom\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React,{useState, useEffect} from 'react';\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",() => {\r\n            if(window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    },[]);\r\n    \r\n\r\n    return (\r\n        \r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n              className = \"nav_logo\"\r\n              src=\" https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\"\r\n              alt= \" Netflix Logo\"\r\n            />\r\n\r\n        <img className=\"nav__avatar\" \r\n                    src=\"https://occ-0-2042-2164.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABd0VJiB-jlZOa4mPM_JZLqrwJamcrjh4ZVC5RcX3P3tEVQ-uJNJ36uHQcaIQvtthwlh1Xj_6lCjDxONOY6wr8ow.png?r=f71\" \r\n                    alt=\"Netflix Logo\" \r\n                    />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport './App.css';\nimport requests from './requests';\nimport Row from './Row';\nimport Banner from './Banner';\nimport Nav from './Nav';\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Nav />\n    <Banner />\n    <Row title = \"NETFLIX ORIGINALS\" fetchUrl = {requests.fetchNetflixOriginals} isLargeRow />\n    <Row title = \" Trending Now\" fetchUrl = { requests.fetchTrending}/>\n    <Row title = \" Top Rated\" fetchUrl = {requests.fetchTopRated} />\n    <Row title = \" Comedy\" fetchUrl = {requests.fetchComedyMovies} />\n    <Row title = \" Horror\" fetchUrl = {requests.fetchHorrorMovies} />\n    <Row title = \"Romance\" fetchUrl = {requests.fetchRomanceMovies} />\n    <Row title = \"Action\"  fetchUrl = {requests.fetchActionMovies} />\n    <Row title = \"Documentaries\" fetchUrl ={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}